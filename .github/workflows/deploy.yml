name: Deploy to Server with Self-Hosted Runner

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted # This targets your self-hosted runner

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Pull and Restart
      run: |
        cd /home/marto/shutupandtakemythings # The path to your project on the server
        git pull origin main
        npm install --production
        pm2 restart item-store
  notify:
    runs-on: ubuntu-latest
    needs: deploy 
    if: always() 
    steps:
    - name: Send Discord notification
      uses: Ilshidur/action-discord@master
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
      with:
        args: |
          **Deployment to shutupandtakemythings**
          Job status: ${{ needs.deploy.result }}
          Repository: ${{ github.repository }}
          Triggered by: ${{ github.actor }}
          Commit: [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
    
    # - name: Send ntfy notification on success
    #   if: needs.deploy.result == 'success'
    #   run: |
    #     curl -X POST \
    #     -H "Title: ✅ Deployment Successful" \
    #     -H "Tags: white_check_mark,rocket" \
    #     -d "Successfully deployed to ${{ github.repository }}" \
    #     ${{ secrets.NTFY_TOPIC_URL }}

    # - name: Send ntfy notification on failure
    #   if: needs.deploy.result == 'failure'
    #   run: |
    #     curl -X POST \
    #     -H "Title: ❌ Deployment Failed" \
    #     -H "Prio: high" \
    #     -H "Tags: x,warning" \
    #     -d "Failed to deploy ${{ github.repository }}. Commit by ${{ github.actor }}. See details here: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
    #     ${{ secrets.NTFY_TOPIC_URL }}
    # In your notify job
    
    # - name: Set notification message
    #   id: message
    #   run: |
    #     # This step creates a message that can be reused below
    #     if [ "${{ needs.deploy.result }}" == "success" ]; then
    #       echo "title=✅ Deployment Successful" >> $GITHUB_OUTPUT
    #       echo "message=Successfully deployed to ${{ github.repository }}" >> $GITHUB_OUTPUT
    #     else
    #       echo "title=❌ Deployment Failed" >> $GITHUB_OUTPUT
    #       echo "message=Failed deployment for ${{ github.repository }}. Triggered by ${{ github.actor }}. See run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_OUTPUT
    #     fi

    # - name: Send Gotify notification
    #   uses: eikendev/gotify-action@0.0.3
    #   with:
    #     gotify_api_base: ${{ secrets.GOTIFY_SERVER_URL }}
    #     gotify_app_token: ${{ secrets.GOTIFY_APP_TOKEN }}
    #     notification_title: "GitHub Build Succeeded!"
    #     notification_message: "A new commit by ${{ github.actor }} was pushed to the main branch."
    #     notification_priority: 5
        
    